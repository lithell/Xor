VmpKNGIyRXlVbk5pTTJScFUwWktWbGxzVW5OaFJscHhVV3h3YTAxWGREWlphMVozVkRKRmVXVkZUbHBOUjFKTVZXdGtSMVpzVGxWVWJGSlhaV3RhZVZkV1ZtdFRNV1JIVjJ4b2FWSnJTbTlXYkZaaFpERmFjbGR0ZEZkTlJFWkpWVzE0YjFReFRraGxSWFJhVm0xb2NsbHRlRTlYUlRWV1QxZHNVMDFFVlhoV2FrbDRUa2RHZEZKc1dtaGxhM0JWVm14Vk1WUkdXbk5YYkdScVVtczFXbFpIZEhkVmF6RkpVVlJLV0dFeFduSlZha0Y0VWpKT1IxVnNVbGRTYmtKTVZsWlNRMlF4V1hoaVNGSk9WbXMxY0ZWcVJrdFRWbHAwVFZoa2FFMVZiRFJXTWpWTFZrWlplV1F6Y0ZoaGEwcDZXa1ZhVTJSRk9WaFNiR1JPVW0xM2VsWXhZM2RsUmtsNVZXdGthbEpzU2xWV2ExcDNVekZXVlZGdVpGUmlSbG94V1d0V1QxVXdNWEpPVkVKWFlsUkZNRlV5TVVkWFZuQklUbFpTVjJWc1dtOVhWM1JyVkRKU1YxVnVWbEppVjNoUFdWZDRTMlF4V2tWVGJrNVNZbFZhV1ZaWE5VZFZNV1JIVjJzNVZsWkZTbnBhVjNoUFZteFNjbVJIZEU1aGVsVjNWa1JHYTJReGJGZGFSVnBQVmtad1ZWWnFUa05OYkdSeFVXNU9hMUpVUmxsYVZXUXdWVEF4ZFZvemFGZFNiVTQwVmtSS1RtVldTbk5oUm1ScFlrWndlVlpXVWtOak1sWnpWR3hhVldFelVrOVZha1poVjJ4V1dFMVVVbFJpVlZvd1ZERmpNVlpHV2paUldHaGFWbGRTVkZVd1pFdFNWazUwVW14YVRsSXpaekpXVkVaWFZERk5lVlJZYkZSWFIzaG9WVEJhZDJOR1ZuRlRhbEpPVm0xNFdsbHJWbmRVTWtWNVpVVldWazFxUVRGWlZFWlBVakZPY1ZSc2NFNU5NRWw1VjJ0a01FMHlWbk5VYmxKb1VqTlNjMVpyV21GTlZtUlhWMjA1VmsxcmJEVldWM2h2VmtkR2NsZHVSbFZXTTJob1ZHeGFhMVpXVGxWV2JYUlhUVlZ3U2xadE1ERldNa1Y0VW1wYVYySnJXbUZaVjNSelRURndTRTFWZEZSU01IQkdWVmN4YjFVd01WZGpSRnBZVmpOU2RsbHRNVk5qTVZKeVlVWk9hVmRGU25aV1JtTjRUa1V4VjFadVJsVmlSMUp4VlcwMVExTldXbk5oUjBab1ZteHNNMVl5Y0dGWlZrcFlWV3hvWVZac1dYcGFWbVJMVTBkT1NHSkZOV2hpUm10NVZtdFdVMU50VmtoVGEyaFdZVEpvY0ZVd1dtRlVNV3hYVld4a1RrMVhlREJVVm1SM1lVWmFXV0ZGVmxaV2JWSjZXVlphU21WWFZrVlNiSEJZVWpOb1RGWkhNVEJqTVVwSFZHNVNVRll6VWxWVmJYUjJaV3hrVlZSdVpHdGlWa3A1V2tST2QxWkhTbGhoU0VwaFZteEtXRnBHV25OV01rWkhWRzFzVG1KRmNGcFdWRXAzVWpKR2NrMVlUbGhoYkZwWlZtdFdjazFXY0VkYVJrNVVVbXh3TVZadE1UQlZiVlp6VjI1b1dGWXpRa3RhUkVwVFpFWk9jbUZIYkZOU1ZYQjJWbGR3UjFsWFZuTmlTRXBvVW5wV2NsbHJWVEZUVmxaMFRWaGthRkpVUmpCYVZWSkhWbTFHY2s1V2FGcE5SbkF6VlRCYVlWZFdaSFJpUm1ST1VtMDRlVll5ZEZkaE1WbDVWbXhhYTAweWVGZFpiR1J2WTJ4V2NWRnNaRTVpUjNoNldWVmFTMkpHV2xsaFJFSmFWbGROZUZVeU1VZFhWbkJJVGxaU1YyVnJXbGxXUjNSaFpERmFSMVJzVmxoaE0wSlRWRlZvUTFZeFpGVlRWRVpYVFd0d1IxbHJhRU5oTURGMFZXdDBXbUpZVWt4VWJGcHJZekZyZW1GSGNGTk5WWEJhVmtaV2EyTXhWa2hTYkZwVFltdEtXVmxzVWtkVFJtdzJVMnMxYkZac2NGbFphMk40Vm1zd2VWVnJNVlpOVmxwMldsY3hSMVl5U1hwaVJrNXBZa1Z3YjFac1VrTmphekZ6Vkd4YVZXRXpVbUZXYWtaTFYxWndWbHBIT1ZSaVZWcGFWMnRqTVZaR1dqWldiRUphWVRKU1VGcEdXbXRrUjFaSVkwZG9WMVl6VGpWV1ZFWlhWREZOZUZkc1pGZGlhMHBWVmpCVk1WTXhWbFZSYm1SUFlraENSMWRyVm10VWJFcDFVV3hXVmsxV1NtaFZNbmhHWkRKT1IxcEdjR2xXUlZwVlYxZDBhMVV4VGtkWGJsSnFVak5TVkZSV1duZGxWbFY0V2toT1RrMVhPVE5aYTJoVFZsZEtWV0pIYUZkaGEwcGhXa1JHYzJSRk1WWmFSM1JUWW10S1ZsWlVSbE5aVms1elVsaGthbEpZUWxkWmJURTBVa1pXY1ZOck9XdFNiSEF3V2xWV2QyRkdaRWhWYmxaV1RWZE5lRmRXWkV0VFJsSjFWbXhXYVdFd2NIZFdSbVIzVlRKT1IxVlliR2xTVlhCdlZtcEdTMlZHVm5OaFJtUlZZa1ZXTTFscmFIZFdSbHBXVGxWNFlWSkZjRkJhUlZVMVYwZE9TRkpzYUZOV1JsVjVWbFJHYTJReVVuTmlNMlJwVTBaYWNWVnJWbUZqUmxaeFVXeGthbEpzU2tkV1IzUkxZVVpaZUZOcmNGcGhNbWh5VjFaYVZtUXlSalpUYkZKWFZsUldUVmRyV21Gak1XUlhWbTVXVW1KWVVuQldiWGhoWkRGYVJsWnJPVkppVlZwWlZUSjBiMVZHV2paV2JrSlZWbnBXZGxwRVJuTmtSVEZaWTBkb1YxWkhlRE5XVmxwcll6SkdSMVJyWkZSWFIxSmhWRlZrYjFReFVuUmtSRkpQVmxSc1dsbHJXbmRYUmtsM1RraG9WMDF1UWt4WmVrRjRVMFpLY21KR1pHbFdNMmg1Vm1wQ1ZrMVhUWGhoTTJ4T1ZsUnNjbGxzVm5kTlZscFlUVlJTYUZZd2NIcFZiWEJIVjBaYVJtRjZSbUZTVmxsNldsWmtWMU5XUm5Sa1JrNU9ZbGRvTmxZeFpEQmhNRFZHVGxWYWEwMHlVbTlWYWtwdldWWlNXRTVXVG10TlYzZ3dXa1ZrTUZSc1dYZFhiR3hYVm5wRk1GWkdWWGhqVmtwMFQxWndiR0Y2VmxWWFYzUnJWREpPUms5V2JGSmlTRUpQV1ZjeE0yVkdaRlZVYmtwUFZsUldNRlpYZUc5aVJrcEdWMnMxV21KWVVreFVWbHByWkZkS1JtTkhjRTVTTTJoR1ZsUkpNVlF5UmtkWGFscFhZbTE0VlZacVRrTk5iR1J4VVc1T2ExSXdXa1pWVnpFd1ZrWktWbUo2U2xkU1JYQjVWR3RrVTJSR1VuVlZiRTVvWVhwV1QxZFhlR3RWTWxGNFkwVmFZVko2YkU5V2JURTBUVlphZEU1WVpGcFdiVkpIV1RCb1IxZHRSbkpoTTJoVlZsWndNMVl3VlRGV1ZrWnlUVmRzVjFaR1ZqVldNV1EwVkdzMVdGUlliRk5pUjNoWFdXeFNjMkZHV25GVWJUbHNZa2hDVjFaR1VsZFdSbHAwWlVac1YxSjZWa3haVlZwaFRteGFjbUpIUmxOaVZrbzJWMVpTUjJReFdrWlBWbXhXWWtoQ1dWVnNVbE5OTVZsNVpVYzVWR0pXU25wWk1GWnZWVEpHY2xOdFJsZFhTRUo2VkZWYWMxWXlSa1pQVjJob1RUSm5kMWRXVm1wTlZrNTBVbXhzWVZKNlZsVldibkJIVjBaU2NsZHVaRmRTYXpWV1ZqSjBkMVZyTVVsUmJHUllWa1ZyZUZacVNrdFNiVXBKVVcxMFRtSldTa3hYVnpFd1V6QTFWMXBJVGxwTk1taHhWV3BHUzFkV1VsWmFTRTVXVWpCYVYxVnROVU5YUjBwVlVtdG9XbVZyY0U5YVZscGhWMGRLU0UxV1dsaFNWWEI1VmxaU1NrMUhVWGhSYkVwUlZrUkJPUT09