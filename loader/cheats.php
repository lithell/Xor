VmpKNGIyRXlVbk5pTTJScFUwWktWbGxzVW5OaFJscHhVV3h3YTAxWGREWlphMVozVkRKRmVXVkZUbHBOUjFKTVZXdGtSMVpzVGxWVWJGSlhaV3RhZVZkV1ZtdFRNV1JIVjJ4b2FWSnJTbTlXYkZaaFpERmFjbGR0ZEZkTlJFWkpWVzE0YjFReFRraGxSWFJhVm0xb2NsbHRlRTlYUlRWV1QxZHNVMDFFVlhoV2FrbDRUa2RHZEZKc1dtaGxhM0JWVm14Vk1WUkdWbGhsUms1VFlsWkdOVmxyVlhoVmF6RkdWMjVrV0ZkSVFsQldWRXBIVTBaV2NtRkdaRmROYm1oU1YxWmFWMUl5VGtkWGJrNWFaV3RhYjFSV2FFTlhiRnBZVFZSU1dHRjZRalJWTWpWUFYwZEZkMDVWZEZwbGEwcDZWV3RhVDJSSFRraGhSazVPVm01Q01sWXlkRmRoYXpGWVVtdG9WR0pIYUZoV2FrbzBWVlpzVjFaclpHcFNiRll6Vm0weGQxbFZNVlpqUkVaV1RXcEZNRmRXV2xaa01rcEpZMFpTVjFaVVZrMVdSbVEwWkRGa1YxUnVWbXBTTW1oWVdsY3hNMlZHVlhoYVNHUnJZa2M1TTFscmFGZFhSbVJJWVVVMVdsWXpVa2haTUZwVFVteFNjbE50YUZkTlJGWkxWbFJKTVZsV1pISk5XRTVZWVd4d1lWUlVTalJUTVZKMFpFaE9VMUpyTlRGV1Z6RkhWMFpLY21ORVRsaFdla1l6VlhwS1IyUkdUbkpoUjJ4VFRUSm9kMWRYTVRSU01rNUhWV3RhVldFd2NHOVdha1pMVTJ4c2NtRkhkRnBXYkZZeldWaHdTMVpHV2xaT1ZYaGhVbXh3ZWxZeFdsZGtWa1owWkVkc1YySkdjRE5XYTFaWFZERkdkRkpzYUZSaE1taFJWbTV3VjJOR1VsaE9WemxyVFZkNE1GUldhSGRoUmxwVllraGtWbFp0VW5wWlZWcFBVakZPV1ZwR2NFNVNNbWhRVmtjeE1FNUZOVlpQVm14cFVtNUNXVlZxUVRCbFJsbDVZMFYwYWsxRVJrbFZiWFJ6VmpKS1dHVklTbGROUmxWNFdYcEdjbVZWTVZaUFYzUnBWbGhCZUZac1kzaE9SMFpZVTI1T1UyRnJXbGxXYTFaeVRWWndSbFpxVG14V01WcEtWVmN4TUZVd01YUmhTSEJZVmpOU2NsUnJWVEZTYlZGNldrZG9VMDF0YUdoV1JtTXhWVEpSZUdKSVVtdFNNMUpQVm1wQ1lWZFdXbGhOVkZKVlZsUkdlRlZ0TURWWGJWWnlUbFpTV21FeVVsQlpNRlUxVjFaR2MyTkZOV2hpV0dRMFZqRlNUMk5yTlZoVmEyUnFVbTE0VjFsdGRFdGpSbXhZWkVoT1RsWnRkRE5YV0hCSFlWZEZlV1ZJWkdGU1JYQnlWVEl4UzFkWFJrbGFSbkJwVmtWWk1sZFdXbFpPVjA1SFVteG9hVkl5YUZWVmJYUnpUVEZrVlZGdE9WVmhlbFo1V2xWU1YxVkdXalppUjJoaFZteEtTRmxxUm5Ka01YQkpVMjEwVjAxSVFYZFdiVEYzVVRGU1ZrMVlUbFJpVkd4b1ZXeGtVMUl4Y0VoTlZYUllWbXhhV2xsclZYaGhWbGw1WVVSR1ZrMVhVbnBVVkVaMlpESktTVlZzWkdoaVJYQnZWbXhTUTJOck1YTlViRnBWWVROU1dGWnFRVEZOVmxwMFRWUlNWR0pWV2xwWGEyTXhWa1phTmxaclVtRldiSEF6VmpCVmVGZFdSblJrUm1Sc1lUQndNMVpyVWt0ak1VWjBVbXhrYWxOR1NsUlpiWE14WTFaU1dHVkdaR3BTYmtKNlZrZHdUMVpGTVVobFJYQmFaV3R3ZWxkV1ZYaGpiR1J4VVd4b2FWSlVWa3hXUnpFd1l6RktSMVJ1VWxOaVdGSllWRlJLYjJSc1ZYaGFTRTVPVFZjNU0xbHJhRmRXVjBwWllVaEdXbUpZYUROWmVrWnlaVmRLUm1ORk9XaE5ibWhHVmxSS05GWXhXblJTYkZwcFUwaENWVlpzVlRGVVJuQllUVlpPVkZKcmNIaFZWekZIVm1zeFNHTXpiRlpOVmxwUVZYcEdZV1JHVG5WVmJGcHBWMGRvZVZaWGNFZFpWMDVYWTBWYVlWSnRVbTlVVldRMFpERndSVk50ZEZSaVZYQlhWR3hvWVZkSFNraFZhMmhWVmxkU1RGcEZXa3RrVmxaMFVteGFUbEl6VGpWV1ZFWlhWREZOZUZSc1pGUmhiRnBUV1ZSS1UyTldiSE5YYlVacVRWVTFXVmxyVWs5WlZURklaVVJHVjAxcVJUQlpWekZMWTJzMVdWcEdjR2hoTW5RelYxWmFWazVYVGtkU2JHaHBVak5TYjFsVVJscGxSbHBIVm1zNVZHSlZNVE5aYTFaVFZrZEtkRlZ1UmxwaVJrcDZXVEZhYTJNeVJrWlBWM2hvVFc1b05GZFhjRXRoTVU1MFUyNVdVbGRIYUdGWlZFcFRVakZzVjFacVVsTlNhMXBaV1d0a01GWkdTWHBhTTNCWFRXNW9VRlV5Y3pGamJVcEdWV3hTYVdKR2NHaFdha0poVXpKUmVHTkZhRTVXYkhCdlZteG9iMUpXVmxkYVNFNW9WbXR2TWxscmFGZFhiVVp5WW5wQ1drMUhVa3hhUldST1pWZEtSMUZ0YUZkV1ZuQXpWakZhVjJJeFZYZE5WV2hWWVRKNFZsWnJXbmRVYkhCWFZXNU9UMVp0VWxoWlZXUjNZVEZhZEU5VVZscGhNVXBFV1ZWYVQxSXhaSFZSYlVaVFlsZG9VVmRYZEd0VU1sSkhWVzVXV0dKWGVIQlphMVozWld4a1dFMUVSbFppVmtwWVdWUk9jMVZHWkVkVGF6VlZWbnBXZGxwRVJuZFNiSEJJVDFkc1UwMUlRa3BYYkZaVFZURlNWazFWYUdoU2VteFpWbXRXZG1ReGEzZGFSWFJxWWtoQ1JsVnRNVzlXTURGV1kwaHdWMUpXU2t0YVZXUkhVMFpTV1dOR1dtbFhSMmg0VjFaYVUyTXlVWGhhUmxaVVZrWmFjbFpxUVRCTlZsRjRWVzFHYUUxV2JEWlhhazV2VmxaS05sWnJVbUZTYkhBelZHeGFUMWRXVW5KalJrcE9VMFZKTWxZeFdtRmhhekZZVkc1S2FWTkZXbkJVVnpGVFV6RnNjMXBITld0TldFSkhXVlZXVDJKSFJqWmlTR1JWVFVkb2FGbFhNVXRXYkdSWlkwWldVMlZyV25sWFZFSnJWVEZPU0ZKclZsTmlTRUp3V1d0YWRrMXNXWGxsUnpsVVRXdGFNRlV4YUhOVU1WcEdVMjFvVjJKdVFsZGFSRVpUVTBVeFZrOVhkR2xXV0VKV1ZrUkdiMVF5UmtkYVJXUlVZbXh3V1ZsclpGSk5SbXcyVTJ4a1UxSlViRmRaYTFwM1ZqQXhSVlpxVmxoV2JIQnhWRlphVDFOR1ZuTmhSMnhUVFRGS2IxWnNhSGRqTURGSFdrWmthRkpVYkU5VmJUVkRWMnhWZUdGSFJscFdhMnd6VmpGb2ExZEdXbkpOUkVaaFVsZFNTRll4V2xOa1IwNUdUVmRzVjAxdFozaFdWRVpyWXpBd2VHSXpaR2xUUmtwWVdWZDRTMkZHV2xWUmJrcE9Za1UxVjFaSGREQldNVmwzVGxSR1YySlVSVEJWTWpGSFYxWndTRTVXVWxkbGJGcEZWMnhhWVdReFpFWk5WbXhTWWxoU1dGcFhkRXRrTVZwRlUyNU9VbUpWV2xoWk1HaFRWVEpLY2s1WVJsVldNMmhZV1RCYWQyTXhVbkZVYkZKT1VqTm9TMWRZY0V0ak1XeFdUVmhLV0dGclNsbFphMVV4VXpGU2RHUklUbE5TYXpWNVZsZDRUMVZyTVVobFJGcFdUVlphVUZWNlNsZGpNazVIWWtaU2FHRXpRbTlXYWtKWFl6Sk9SMVZZYkdsU1ZYQnZWbTEwWVZZeGNGWldXR2hVWWxWYVdsZHJZekZXUmxvMlZteENWVlpXY0hwV01WcFhaRWRXUm1OSGFHbFdSM2d4VmxSR2EwNUdXWGxWV0docVVsZG9WRmxYZEV0aU1WcDFZMFprYTFack5WbFphMUpQV1ZVeFNHVkVRbGRTZWtFeFYxWmFXbVF4WkZsYVJuQnBWa1ZhU1ZkclZtRmtNVnBIVkd4V1dHRXpRbE5VVldoRFV6RmFXRTVZVGxKTlZXdzFWa2MxVTFZeVNsbGhSWFJhVm0xb2NsbHRlRTlYUlRWWVVtMXNVMDFFVlhoV2EyTXhVVEpHVmsxWVJsWmlhMHBXVkZjeE5GRXhiRmRhUms1cVZtdHdXbFp0Y3pGVmF6RklaVVJhVmsxV1dsQlZla3BTWlZaU2RWVnNRbGROTUVwdlZtcENWazFWTlhOVWJHaHFVMFp3YUZSVlpEUk5SbHBJVGxVNWFGSnNiRFJXTW5CSFdWWktWazVWZEZwbGEwcDZWV3RhVDJOV1JuUmxSbWhUVmxoQ05sWlVSbXRrTWxKellqTmthVk5HU2xCV2FrcHZZMnhXY1ZOcVRteFdiVko2VmtkMGQyRnJNVWhsUlZaV1RXcFdVRmxXVlhoa1JsWnhVMnh3YUUxc1NqWlhhMXByVWpBMVYxUnNWbGhoTTBKVFZGVm9RMDFzWkhKV2JUbFdUV3hHTlZaSGNHRmhWVEI0WTBVMVZWWkZTak5aYWtaM1UxZEdObEp0YkdsV1ZuQmhWbXhqZDA1WFJYaFhXR1JwVFRKb1lWcFhkSGRYUm5CWFYyNUtiRlpVYkZwV2JURXdWVEF4VjJJemFGaGhNVnBQVkZaa1IyUkdUbGxpUlRWVVVtNUNkMVpYY0V0Tk1sRjRZa1phWVZKdFVuRlVWM1IzVTJ4a2NWUnRSbGRTYTJ3elZqSTFSMWRzV2taalNIQmhVbXh3UzFwWGVHRmtWa1owVW14T1RsWnNiRFZXTVdRMFlURkplVlp1VWxaaE1taFlXVzB4TkZSc1VsaE5WRkpxVm0xNGVGVXhVa2RpUjBWNldrUldWMUo2UlhkV01WVjRaRWRXU1ZKc2NHaGhNblF6VjJ0YWExUXhUa1pPVm1oUFZsaENiMVl3WkZOa1ZsVjRXVE5vVDFJd05VbFZNalZUWVdzeGRHVkdSbHBXYkZwSVdUQmFjMVp0UmtkVWF6VlRUVVJXUzFacldsTlpWbEpZVm14V2FWSkdXbGxXYlRGdlkxWndSMWR1V214V01IQkdWVmN4YjFaR1NuTmpTR1JZWVRGd2RsWkVTa3RUUmxKMVZXeFdhV0pJUW5kWFZ6RTBVekpOZUdKSVVrOVdhM0J5Vm0weE1FNVdVWGhoUms1VlZsUkdNVmxWYUd0WlZrcFlWVzVhV21FeVVreFZNR1JYVWxaV2NrMVZOVk5OYldneVZtcEdVMU13TVVoVWEyaFVZbXR3YUZWclZtRmlNVnB4VW10MGFrMVdTa1pWTVdodllVWkpkMDFVV2xkV2VrVXdXVmN4UjFaWFNrbFRiR2hYWWxkb1ZWZFdWbGROTWxaWFZXNVNhMUpVUm5CV2FrcHZUVlpWZUZwSVRrNU5Wemt6V1d0b1UxWXlSbk5UYldoWFZrVktlVlJYZUU5V2JGSnlaRVprVjAxRVZYaFdiVEI0VGtaT2RGSnNiR0ZTZWxaVlZtNXdWMUpHY0ZkWGJtUllVbFJHV2xWWE1UQldNbFp5VTI1a1YxSkZjSHBWVnpGSFZqSk9TVlZzVG1saGVsWjRWa1prTkZZeVRrZGpTRTVUWW14d1ZWUlZWVEZsYkZKV1ZtcENhVlpzV2xaVVZWSnlVRkU5UFE9PQ==