VmpKNGIyRXlVbk5pTTJScFUwWktWbGxzVW5OaFJscHhVV3h3YTAxWGREWlphMVozVkRKRmVXVkZUbHBOUjFKTVZXdGtSMVpzVGxWVWJGSlhaV3RhZVZkV1ZtdFRNV1JIVjJ4b2FWSnJTbTlXYkZaaFpERmFjbGR0ZEZkTlJFWkpWVzE0YjFReFRraGxSWFJhVm0xb2NsbHRlRTlYUlRWV1QxZHNVMDFFVlhoV2FrbDRUa2RHZEZKc1dtaGxhM0JWVm14Vk1WUkdWbGhsUms1VFlsWkdOVmxyVlhoVmF6RkdWMjVrV0ZkSVFsQldWRXBIVTBaV2NtRkdaRmROYm1oU1YxWmFWMUl5VGtkWGJrNW9VbFUxYjFSV1pEUlhiRnBZVGxWT2FGWXdjRmxXUnpWRFZsWktWazVWVGxwV2JIQjVXbFprUjFOSFZrZGpSbWhUWVRJNU5GWnFSbUZoYlZaSVUydGFhVk5GV25CVVZ6RlRVekZzVlZOdE9WUldhelZYVm0weFIySkdXblZSYkd4WFlrZFNlbFpHV2taa01VcDFVVzFHVTJWcldsbFhiRnByVkcxV1dGTnJiRmhpVjNodlZteGtlbVZXVlhoV2F6bFVUVVJHZVZSV1dsTlVNVTVJVld0MFdsWnRhSEpaYlhoUFYwVTFWbFJ0ZUZkTlIzY3hWbXRqZUU1SFJuSk5TR1JPVjBWS1ZsUlhNVFJSTVd4WFdrVjBXRkpzY0hoVlZ6RnZWakpXYzFOVVJsZE5Wa3BNVkd0a1QxSXlUa2RoUlRsWFVsVndURmRXV205aE1rcHpWR3hvVDFack5WQldha0V4VTFaYWMxcElUbFpTTUZwWFZXMDFRMWR0U2xWU2EyaFZWbGRTU0ZZeFdtdGtSMVpHWTBkb1dGSXhTakZXVkVacVpVVTFTRlZ1VG1sTk1uaFJWakJWTVdJeFduVmpSbVJzVm1zMVdWa3dhR0ZaVlRGSVpVUkNXbFpXU2tSWlZFWlBVbXhPY1Zkc1ZrNWlXRTEzVjJ0amVGUXlVa2RUYmtaVllYcEdjRlpxUmt0Tk1XUnlWbTEwYVUxRVJsaFphMmhYVmpKS2RWRnRhRmROUmxveldURmFjMk5XVGxWU2F6VlRZbXRLV2xaSGVGTlJNVkpZVTJ4YVQxWkZjR0ZaYTFWM1RWWnNObE5yWkZoV2JGb3dWREZrUjFZd01IbGhSRnBZWWtaYVQxUnNXazlXTWtwSFlVWldhV0V6UW5aV2JUVjNWakZPVjJORlpHRlRSVFZ2VkZab1ExWldVWGhoUms1WVlrZFNSMVJyYUd0WFIwcElZVVYwWVZKNlJraFdNRnBUWkZaa2RHSkhiR2hsYTFZMVZqRmtOR0V4V1hkTlZXaFRZa2RvVUZVd1pEUlViR3gwWkVWMFRsWnRVakZaYTFaM1lXc3hTR1ZGVmxaTmFsWlFXVlZhWVU1c1duVmlSbEpYVFRCSmVWWXljRU5qTWxKSVVtdFdVbUpZVWxWVmJGWjJUV3hhUlZOdVNrOVNNVW93VlcxMGIxZHJNSGhUYlVaWFRVWmFURnBFUmxOVFJURkZVbTFzVTAxVmNFWldSRVpyVFVaa2MxcEZaRlJpVkd4V1ZXdFdjMDVHVWxaV1dHaHFVbFJXV1ZReFpFZGlSbHBZWlVSYVZrMVdXbEJWZWtwTFUwWmFjbUZHWkZkTmJtaFNWMVphVjFJeVRrZFhia3BvVWxoU1QxWnROVU5XVmxWNFlVVTVWR0pGVmpOWk1GSlBWMnN4Y1ZKc2FHRlNWMUpJVmpGYVlXUldWbkpqUjJocFZrZDRNVlpVUm1wbFJteFlVbXRvVkdFeWVGWlpiR2h2VXpGc2RHTkZUbXhpUlZZMVdXdFdUMVF3TVVobFJFSllZVEpTZGxsV1dscGxSbHAxVVd4V1RtSllhRVJYVmxwaFlUSlNWMWR1VmxWaVNFSlhWRlZrTkU1c1ZYaFdhemxVVFd4YWVsa3dXbk5XUjBaeVkwZG9WMDFHV25wWk1GcFNaVmRLUmxOdGFGZGlTRUpKVmxSR2EyTXhVbGRTV0dSVFltdEtZVnBYY3pGV1JteFdXa1pPVkZKc2NGbFphMXBEWVVaYVZsZHVaRmRXTTFKeVZtcEJlRkl5VGtkaFJsWm9ZVEJ3YjFadGNFZFNNazVIVld0YVZXRXdjRzlXYlRFd1RsWnNWbHBFVWxoaVIxSklWVEp3UjFkR1duUlVhbEphWVRGYWVsa3haRXBsVm5CR1kwZG9UbUpYYUV0V1ZFWlhWakZzV0Zac1pHcFNiV2hZVm1wS05GUnNWbFZSYTJScVVtNUNTVlJXV210aVJsbDNUVlJXV21FeWFHaFpWbVJIVm0xR05sTnNVbGRXVkZaTlZrWmtlbVZHV2taT1ZXeGhVbGhDYjFZd1pGTmtWbFY0V1hwR1VrMXNXbGxWTVdoelZsZEtXV0ZJUmxWV1JVWTBXVEJhVW1WWFNrWlRiV2hYVFZadmVGWnRNREZVTVdSelZsaGthVk5JUWxWV2JGVXhWRVpTVmxwR1pGaFdhMW93V2xWV2QyRkhTbFZpU0ZaV1RWZE9NMVJXWkVkVFJsWnlZVWRzVTFKWVFtOVdiRkpEWXpKV2MxUnNXbFZoTTFKeFZGZDBjMDVXWkhKaFIwWm9WbXRzTlZwVlVrZFhiR1JJWlVWMFZXSllVbnBWYTFwUFpFVTVXR1JHVWxOaE1qazJWakZTVDJReVVuUlZia3ByVFROQ1ZWbHNaRzlqYkhCWFZXeGthMVp0ZUZoWlZWcFBZVlV4YzFOc2JGWk5ia0pJV1ZkemVHTXhaSEZXYkdoWFVsZHplRmRyV210Vk1VNUhWMjVXVjJKWVVsTmFWM2hoWlVaa1dHTkZjR3ROYkVvd1ZUSjBiMkZXU2taVGJUbFdZV3RhYUZwWGVITmpiVVpJVGxkMGFWSlVWa3BXVnpCNFpESkdSazFZVW14U1JWcFhXVmR6TVZkR2EzZFhibVJVVW14d1dsWXlNWE5XTURGSFlucEtXR0V4V25KV2FrcFhWbTFSZW1KSGJGTk5NRXAzVmtaa2QxWXdOWE5WYTFaVlltMVNUMVpxUW5kVGJGcHpZVVprYUdKRmJ6SldiVFZYVmtaWmVXUXpjRmhoYTBwNldrVmtWMU5XUm5SaVIyeFlVbFJXTTFaclVrdGpNVVowVW14b1UyRXllRmRaVjNSTFkxWlZkMVpZWkU1aVJrcEtXVmh3VjJKR1duUmxSbkJZVmtVMVdGZFdWWGhrUjFGNldrWndWMVl5YUZsWFZscHJWVEZrVjFWdVVteFNNMEp3Vm14U1ZtVldaRmhOUkVaV1RXdHdTVlV5TlZkV2JHUkhWMjFHVlZZelFucFVWVnBUVWxaT2NWVnRjRk5OVlhCS1YxWldhMDVIUmxkVFdIQmhaV3RLVmxWclZrdGtiR3hXVjI1S2JGWXhTa3BWVnpGellVVXhjMUpxVWxoV2JIQnlWbFJLUzFKdFVYcGlSVFZYVFcxb2VGWkdVa2RUTWsxNFlUTnNhR1ZzV205VVZtUTBWMnhhV0UxWE9WVldWRVo0VlcwMWExZHRWbkpqUlRsaFVtMVNTRlV3V25KbFYwcEdUVlpLVGxKV2NETldha28wWWpKSmVWTnJXbWxUUlZwd1ZGY3hVMU14YkhKWGEzUlBWbTVDU0ZkcldtRmhSbHBaWVVWV1ZsWnRVbnBaVjNoUFVtMU9TVlJzY0dsU01VbzJWa1phYTFNeFdrZFViRlpZWVROQ1UxUlZhRU5OUmxsNFYyMTBUMUl4V25wWk1GcFRWa2RHZEdWRk5WWldiVTB4V1cxNGQxZFhTa1prUjJ4cFVqTm9XbFpHV210T1JrNTBVbTVTVUZaNlZsVldhazVUVlVaV2MxWnVUbXBTTVVZMVYydFdkMkZYUmpaV2JuQllWa1ZyZUZkV1pFdFRSbEoxVVd4U1YxSnVRa3hXVmxKRFpERkZlRmRyV2xkaGF6VnZWbXhvYjFKV1ZsZGFTRTVvWVhwQ05GVXlNRFZaVmtwWVZXeGtXbFpzVlRGWk1GcEhWMGRLUjFwR2FGTldXRUkxVm1wR1lXSXhWWGxVYTJoVVlteEtZVlJYTVRSVWJGWlZVV3RrYWxKdFVsWlZNakExWVZaS2RHVkdjRmRXZWxaWVZqSjRZVTVzU25WVWJGSlhUVEJKZVZZeWNFTmpNazUwVW10YWFGSllRbFJXYlRWQ1RWWlplV1ZIZEZkaVZWcFhXbFZXVTFWc1dYbGxTRXBhWWtad2FGUnNXbk5PYkU1MVZHMTBhVlpZUWpOV1ZFWlRXVlpPYzFKWVpHbE5NbmhXVm0xemQyUXhjRVZSYms1cVVqRkdOVmRyVm5kaFYwVjNZbnBHV0ZZelFreFdSRXBMVTBaU1dXTkdWbGROYm1oU1YxWmFWMUl5VGtkYVJsWlVZV3hLY1ZWdE5VTlhWbEp6Vld0T1ZHSlZXbHBYYTJNeFZrWmFObFpzVWxWaVIxSlFWVEJhWVZkSFNrZFJiV2hYVmxad00xWXhZM2RsUmtsM1RWVm9VMkpIZUZsWmJHaHZVekZzVjJGSGRHbGlSVFZaVkZaU1UyRXlTa2hQVkZaVlRWZG9VRmxWV21GT2JGcDFZa1pTVjAwd1NYbFdNbkJEWXpKU1NGSnJWbEppV0ZKVlZXeFdkazFzV2tWVGJrcFBVakZLTUZaSE5WTlZNa1p5VGxVMVdtSkhVbFJhUkVaM1VteHdTRTlWTlZkaVdHZDRWbTB3TVdReGJGZGFSVnBxVTBWYVlWbFhkSEpsUmxKV1YyNWtXRkpVVmxaVlYzTjRZVlphVlZaWWJGaFdNMmhQVkd4a1RtVldTbk5pUmxwcFZrZDRiMVp0Y0U5aU1sWnpZMFphVlZaR1dsVldiVEUwVjFaYVNFNVZkR2hTYkc4eVZtMTBjMWxXU25SVmJuQmFWa1ZhTTFaclZUVlhWbFp6WTBab1UxWkdTWHBXYWtvMFlqRk9kRlZ1VWxOaVIyaFdXVzE0ZDJOR2JIUmpNMmhPWWtkU1ZsVXllRTlaVjBwV1YyeHNWMUo2Vm1oWlZtUkhWbFphY1ZSc2NHbFdSVnA0VjFaYVYwNUdTa2RTYkdocFVqSjRWRlJYTlc1bFJtUlhZVWhPVkdGNlZubFphMVpUVmtkS1ZXSklTbFpOUm5CTVZGUkdjbVZ0VGtsWGJYUm9UVEpSTWxaVVNYaGlNa1Y1Vm14V1YySnNXbUZXYlRGdlZrWnNjVk5zVGxoU2F6VjRWVzB4ZDFSdFNrZGlla1pYVFZaS1MxUnNaRk5YUmxaeVlVWmthV0pHY0hsV1ZtaDNWakpPVjJKSVJsUlhSMUp5V1d4V2QxTldiSEpWYTA1b1VtdHNORll5TlhkWGJVVjVZVWhXWVZJemFGQlZNRnBMWkVkT1NHRkZOV2xYUjJRMFZteGtkMVF4V1hsVWEyUnFVbGRvV0ZZd1duZGpSbHB4VVcxR1QySklRa2RYYTFwcllrWmFXVnBFVmxkV2VrWjJXVlJHU21ReFduRlRiR2hYVWxoQ1ZGZHJXbXRTTVU1SFlUTnNhVkpVUmxOVVZWWmhaREZaZVdWSE9XbE5hM0JIV1d0b1IyRlZNWFJWYTNSYVlURndURlJzV25kU01YQkhWMjFvVjFkSGFFWldWbHByWXpKR2MxUnJXbXBUUlRWaFdXdGtVMlZzVWxkYVJYUlhVbXMxVmxZeWRIZFZhekZKVVdwQ1YwMVdjSEpVYTJSWFl6Sk9SMVZzVW1oaVdHaEdWakp3U2s1V1VrZGFSV1JUWW0xU1VWWldVWGRQVVQwOQ==