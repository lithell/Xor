VmpKNGIyRXlVbk5pTTJScFUwWktWbGxzVW5OaFJscHhVV3h3YTAxWGREWlphMVozVkRKRmVXVkZUbHBOUjFKTVZXdGtSMVpzVGxWVWJGSlhaV3RhZVZkV1ZtdFRNV1JIVjJ4b2FWSnJTbTlXYkZaaFpERmFjbGR0ZEZkTlJFWkpWVzE0YjFReFRraGxSWFJhVm0xb2NsbHRlRTlYUlRWV1QxZHNVMDFFVlhoV2FrbDRUa2RHZEZKc1dtaGxhM0JWVm14Vk1WUkdWbGhsUms1VFlsWkdOVmxyVlhoVmF6RkdWMjVrV0ZkSVFsQldWRXBIVTBaV2NtRkdaRmROYm1oU1YxWmFWMUl5VGtkWGJrNWFaV3RhYjFSV2FFTlhiRnBZVFZSU1dHRjZRalJWTWpWUFYwZEZkMDVWZEZwbGEwcDZWV3RhVDJSSFRraGhSazVPVm01Q01sWXlkRmRoYXpGWVVtdG9WR0pIYUZoV2FrbzBWVlpzVjFaclpHcFNiRll6Vm0weGQxbFZNVlpqUkVaV1RXcEZNRmRXV2xaa01rcEpZMFpTVjFaVVZrMVdSbVEwWkRGa1YxUnVWbXBTTW1oWVdsY3hNMlZHVlhoYVNHUnJZa2M1TTFscmFGZFhSbVJJWVVVMVdsWXpVa2haTUZwVFVteFNjbE50YUZkTlJGWkxWbFJKTVZsV1pISk5XRTVZWVd4d1lWUlVTalJUTVZKMFpFaE9VMUpyTlRGV1Z6RkhWMFpLY21ORVRsaFdla1l6VlhwS1IyUkdUbkpoUjJ4VFRUSm9kMWRYTVRSU01rNUhWV3RhVldFd2NHOVdha1pMVTJ4c2NtRkhkRnBXYkZZeldWaHdTMVpHV2xaT1ZYaGhVbXh3ZWxZeFdsZGtWa1owWkVkc1YySkdjRE5XYTFaWFZERkdkRkpzYUZSaE1taFJWbTV3VjJOR1VsaE9WemxyVFZkNE1GUldhSGRoUmxwVllraGtWbFp0VW5wWlZWcFBVakZPV1ZwR2NFNVNNbWhRVmtjeE1FNUZOVlpQVm14cFVtNUNXVlZxUVRCbFJsbDVZMFYwYWsxRVJrbFZiWFJ6VmpKS1dHVklTbGROUmxWNFdYcEdjbVZWTVZaUFYzUnBWbGhCZUZac1kzaE9SMFpZVTI1T1UyRnJXbGxXYTFaeVRWWndSbFpxVG14V01WcEtWVmN4TUZVd01YUmhTSEJZVmpOU2NsUnJWVEZTYlZGNldrZG9VMDF0YUdoV1JtTXhWVEpSZUdKSVVtdFNNMUpQVm1wQ1lWZFdXbGhOVkZKVlZsUkdlRlZ0TURWWGJWWnlUbFpTV21FeVVsQlpNRlUxVjFaR2MyTkZOV2hpV0dRMFZqRlNUMk5yTlZoVmEyUnFVbTE0VjFsdGRFdGpSbXhZWkVoT1RsWnRkRE5YV0hCSFlWZEZlV1ZJWkdGU1JYQnlWVEl4UzFkWFJrbGFSbkJwVmtWWk1sZFdXbFpPVjA1SFVteG9hVkl5YUZWVmJYUnpUVEZrVlZGdE9WVmhlbFo1V2xWU1YxVkdXalppUjJoaFZteEtTRmxxUm5Ka01YQkpVMjEwVjAxSVFYZFdiVEYzVVRGU1ZrMVlUbFJpVkd4b1ZXeGtVMUl4Y0VoTlZYUllWbXhhV2xsclZYaGhWbGw1WVVSR1ZrMVhVbnBVVkVaMlpESktTVlZzWkdoaVJYQnZWbXhTUTJOck1YTlViRnBWWVROU1dGWnFRVEZOVmxwMFRWUlNWR0pWV2xwWGEyTXhWa1phTmxaclVtRldiSEF6VmpCVmVGZFdSblJrUm1Sc1lUQndNMVpyVWt0ak1VWjBVbXhrYWxOR1NsUlpiWE14WTFaU1dHVkdaR3BTYmtKNlZrZHdUMVpGTVVobFJYQmFaV3R3ZWxkV1ZYaGpiR1J4VVd4b2FWSlVWa3hXUnpFd1l6RktSMVJ1VWxOaVdGSllWRlJLYjJSc1ZYaGFTRTVPVFZjNU0xbHJhRmRXVjBwWllVaEdXbUpZYUROWmVrWnlaVmRLUm1ORk9XaE5ibWhHVmxSS05GWXhXblJTYkZwcFUwaENWVlpzVlRGVVJuQllUVlpPVkZKcmNIaFZWekZIVm1zeFNHTXpiRlpOVmxwUVZYcEdTMVl5VGtkaVJscHBWMGRvYUZaR1VrZFRNazE0V2toS1ZXRXpRbkZVVldRMFVsWlZlVTFZWkdoU2EydzBWakl3TlZsV1NsaFVXR2hhVmxkU1RGWXdXbUZYUjBwSFVXMW9WMVpXY0ROV2JGSkRWakpHYzJJemFGUmliRnBWV1d4b2IyRkdXbFZSYms1c1lrVTFWMVpIZERCVWJVcEpVV3h3VmsxcVZqTlpWVnBoVG0xS1JWSnNVbGROTUVsNVZqSndRMk15VWxkYVJteG9VbFJHYjFsVVFtRmtNVnBHVm1zNVVtSlZXbGxXUjNSelZrZEtjMk5IUmxWV00yaG9WRzE0Y21WdFNrWmpSVGxvVFc1b1JsWlVTbmRaVjBWNFYxaHdhRko2YkZWV2Frb3paV3hrY1ZGdVRtdFdiRnA0Vm0weGQxVXdNVmRYYm1SWFVrVndlbFZYTVVkWFJrNTFWV3hPYUdFd2NIWldha0poWkRKTmVGUnNhR2xTUlRWb1ZGVmtORTFHY0ZaaFIwWmFWbFJHZUZscmFIZFhiRnAwVkZob1drMXVVbnBaTVdSS1pWWndSbU5IYkZkTmJWRjZWakowVjJJeFJYbFdia3BRVjBWS1VWVXdXbmRqVm14elZteHdiR0pHU2tsVVZtUXdZV3hKZUZOcmJGcFdWa3BJVmpJeFMyTXhaSEZYYkdocFVqSm9UVmRXWTNoVGJWWldUbFpXVW1KVldsaGFWM2hYVFRGYVJsa3phRlZOYkVvd1ZUSjRVMVZHWkVaT1Z6bFhUVVp3VEZwSGVHdGpNWEJGVlcxd1RtSkdjRVpXUkVaWFl6RmtjMWRZWkU5WFIzaGhWbTB4VG1WR1ZYZGFSazVZVWpCd1NWcEZaRWRXYlZaMFpETmtWMDFXY0haV1JFRjRVakpPUjJKR1VsaFNia0oyVm0xd1FrMVZNWE5pU0ZKUFZsUldjbGxzV21GTlZscDBUbFU1YUUxV1dUSldiWEJQVjIxS1ZWSnVSbHBXYkZrd1ZXdGFSMWRIU2toaVJrNU9ZbTFrTkZZeFdtOWpNVTV5VGxoS2FWSldTbFZaYkZKelkyeFZkMWRyZEU1TlYzUTJXVEJvWVdFeVJYcGFSRnBXVFdwR2RsbFVTbGRXVmxwMVZteHdWMkpYYUZWWFYzQkxWVEZrUjFSdVJsTmlXRUpQV1d0YWRrMVdXWGhWYTNCUFZqRktXVlpYZEc5V01rcHpWMjVLVmxkSVFsaFpNVnB6WTFaT1dWcEhkR2xXV0VKS1YxZDBVMUV5UmtkVFdHaFlZbTVDWVZsVVNtOWtWbkJJWlVVNVZGSnJjREJaTUdSdlZHMUtXVm96YUZkV00wSlFWbXBLVDFJeVRrWmhSbVJZVW01Q2QxWnRjRU5aVlRWelkwVmFZVkp0VW5OV2JHaHJUbFphV0UxWE9XaE5WV3d6Vm0xd1MxZHRTa2hWYm5CaFZqTm9lbFJzVlRGWFJUbFlVbTE0VjFZelp6SldWRVpYVkRGTmVWTnJhRmRoTW1oWVZtcEtORlZXYkZkV2EyUnFVbXh3ZVZsVlZqQlViRnAxVVd4V1ZrMVhhRkJWTW5oR1pESk9SVlJzY0U1aGExcFpWMnRXYTFJeFpGZFhibFpXWVROQ2IxbHNVbk5rVmxWNFdUTm9XbFl3V2tsVk1uUnpWbGRLV1dGRmRGcGlXRUpFV2xkNFJtVlhTa1pVYXpsT1VqTm5kMVl5ZEd0aU1rWlhWMWhvVjJKclNsWlVWekUwVVRGc1YxZHJXbXROVmxwWldXdFZlRlZyTVVaWGJtUllWMGhDVEZacVNsZFhSbFoxVld4a2FXSllhRXhYVm1OM1RsZEtjMVJzYUd0U1YxSldWbTE0UzFKV1ZYaGhSVGxVWWtWV00xa3dVbUZaVmtwWVZXdG9WVlpXY0ROV2ExcFBWbFprY21OR1NrNVRSVXBaVmpGU1EyRXhWWGxTYTJoV1lUSm9jRlV3V21GaFJuQlhWbTVPYkdKRk5WZFdSM1F3WVVkS1ZsZHJiRmRpVkVaMldWUkdTMDVzV25SUFZuQnBVakZLV0ZkV1dsWk9WMDVIVW14b2FWSnNTbFJXYWtFeFpGWmFXRTFFUmxSTmEzQklXVEJhVTFaR1pFWk9WWFJXVmtWS01scFdXbXRqTWtaR1pFZDRhVlpXY0ZwV1JFWnZWakZPZEZKdVVsQldlbFpWVm01d1YxbFdjRlpXYWxKcVZtdGFXVmxyVlhoVmF6RkdWMjVrV0ZaRlNuWlZla3BUWXpKRmVtSkdaR2xpYTBwNFYyeGFWMk5yTVhOVWJGcFZZVE5TYjFsc1ZuZFRWbXh5V2tSU2FGWXdjSHBWYlRWRFZsWktWazVWVGxwV2JWSlVWVEZrUzFOV2NFaFNiRnBPVWpOT05WWlVSbGRVTVUxNVZXeGthVkp0ZUZkWmJYUkxZMnhzYzFkc1pHcFNiRXBIVmtkMFMyRkdXWGRqUld4VlRWZE5lRmxXVlhoa1YwWkpXa1p3YVZaRldUSlhWbHBXVGxkT1IxSnNhR2xTTW1oVlZXMTBjMDB4WkZWUmJUbFZZWHBXZVZwVlVsZFZSbVJJWlVkR1YwMUhVbEJVVmxwclkxWk9kVlJyTlZOTlJuQkxWbTB3ZUdNeVJYaGFSVnBQVjBVMVlWUlhjRWRWUm5CSVRWVjBhMVpzV2pCYVZXUnpZVmRLUmxkWWFGZE5Wa3BMVkd4a1UxSnRVWHBpUjNoVVVsVndlVlpYY0V0aU1rMTRZa2hLWVZKR1NsQlZiR2hyVFRGc1ZscEhPVmhoZWtZeFZsYzFhMWR0U2xsVmJrcFZWbTFTU0ZZd1dsZGtSMVpHVFZVMWFHRXhjREpXTVdoM1ZERlZlVk5yYUZWaWEwcFJWakJXUzFsV1VsaGpTRTVPVm0xME5sbFljRmRoUjBwSlVXdG9WVTFYYUVSV01uTjRZMWRLUlZKc1ZsTmxiRnBGVjJ0YVlXUXdOVmRVYkd4VllUTkNVMVJWYUVOT2JHUlhWMjF3VGxZd05YbFphMmhIWVZVeGRGVnJkRnBpUjFKMVdrUkdkMUp0UmtaVWJYaG9aVzE0TTFaRVFtOVpWMFowVTJ4YVdGZElRbFpWYm5CSFkyeHJkMXBHVGxSU01GcEdWVzE0ZDJGWFNrZGlla3BYVFc1b2RsVjZTa2RrUms1WllrVTVWMUpWY0c5V2JUVjNWbTFSZUZWcmFFNVdWR3h5V1d4V2QxWldVWGhoUlRsb1VtMVNTRlV5TldGWFIwcElWVlJDV21WcmNGaFZhMVUxVm0xS1IyTkdaRTVTUmxreFZqRmFZV0ZyTVZkVWEyaFdZa2RvY0ZWcVRsTmhSbHBaWTBoT1RsSnRVbGhaVlZVMVZHeEtkVkZzY0ZaTlYyaG9WMVphU21ReFpGbGFSbWhYWVhwQmVGZFdaRFJrTVVwR1RsWm9VRll3V25OV2JHUTBUbXhWZUZack9WUk5hM0JKVm0xMGIxWXhXWGxsUmtaYVZteGFTRmt3V21GamJVWkdaRVUxVjJKclNsWldWRVp2VkRGT2MxSllaR3BTUlRWaFZGZHdSMWRHY0VaYVJXUllWbXh3TVZaWGRIZGhSMHBWWWtoV1ZrMVhUalJYVm1SSFUwWk9jbUpHVm1sWFIyaE1WMWN4ZDFFeFVrZFNXR3hoVTBkU2FGVnNWVEZOVmxKV1ZWaGtVVlZVTURrPQ==