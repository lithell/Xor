VmpKNGIyRXlVbk5pTTJScFUwWktWbGxzVW5OaFJscHhVV3h3YTAxWGREWlphMVozVkRKRmVXVkZUbHBOUjFKTVZXdGtSMVpzVGxWVWJGSlhaV3RhZVZkV1ZtdFRNV1JIVjJ4b2FWSnJTbTlXYkZaaFpERmFjbGR0ZEZkTlJFWkpWVzE0YjFReFRraGxSWFJhVm0xb2NsbHRlRTlYUlRWV1QxZHNVMDFFVlhoV2FrbDRUa2RHZEZKc1dtaGxhM0JWVm14Vk1WUkdXbk5YYkdScVVtczFXbFpIZEhkVmF6RkpVVlJLV0dFeFduSlZha0Y0VWpKT1IxVnNVbGRTYmtKTVZsWlNRMlF4V1hoaVNGSk9WbXMxY0ZWcVJrdFRWbHAwVFZoa2FFMVZiRFJXTWpWTFZrWlplV1F6Y0ZoaGEwcDZXa1ZhVTJSRk9WaFNiR1JPVW0xM2VsWXhZM2RsUmtsNVZXdGthbEpzU2xWV2ExcDNVekZXVlZGdVpGUmlSbG94V1d0V1QxVXdNWEpPVkVKWFlsUkZNRlV5TVVkWFZuQklUbFpTVjJWc1dtOVhWM1JyVkRKU1YxVnVWbEppVjNoUFdWZDRTMlF4V2tWVGJrNVNZbFZhV1ZaWE5VZFZNV1JIVjJzNVZsWkZTbnBhVjNoUFZteFNjbVJIZEU1aGVsVjNWa1JHYTJReGJGZGFSVnBQVmtad1ZWWnFUa05OYkdSeFVXNU9hMUpVUmxsYVZXUXdWVEF4ZFZvemFGZFNiVTQwVmtSS1RtVldTbk5oUm1ScFlrWndlVlpXVWtOak1sWnpWR3hhVldFelVrOVZha1poVjJ4V1dFMVVVbFJpVlZvd1ZERmpNVlpHV2paUldHaGFWbGRTVkZVd1pFdFNWazUwVW14YVRsSXpaekpXVkVaWFZERk5lVlJZYkZSWFIzaG9WVEJhZDJOR1ZuRlRhbEpPVm0xNFdsbHJWbmRVTWtWNVpVVldWazFxUVRGWlZFWlBVakZPY1ZSc2NFNU5NRWw1VjJ0a01FMHlWbk5VYmxKb1VqTlNjMVpyV21GTlZtUlhWMjA1VmsxcmJEVldWM2h2VmtkR2NsZHVSbFZXTTJob1ZHeGFhMVpXVGxWV2JYUlhUVlZ3U2xadE1ERldNa1Y0VW1wYVYySnJXbUZaVjNSelRURndTRTFWZEZSU01IQkdWVmN4YjFVd01WZGpSRnBZVmpOU2RsbHRNVk5qTVZKeVlVWk9hVmRGU25aV1JtTjRUa1V4VjFadVJsVmlSMUp4VlcwMVExTldXbk5oUjBab1ZteHNNMVl5Y0dGWlZrcFlWV3hvWVZac1dYcGFWbVJMVTBkT1NHSkZOV2hpUm10NVZtdFdVMU50VmtoVGEyaFdZVEpvY0ZVd1dtRlVNV3hYVld4a1RrMVhlREJVVm1SM1lVWmFXV0ZGVmxaV2JWSjZXVlphU21WWFZrVlNiSEJZVWpOb1RGWkhNVEJqTVVwSFZHNVNVRll6VWxWVmJYUjJaV3hrVlZSdVpHdGlWa3A1V2tST2MyRkdTalpXYXpWWFlXdEthRlJVUm5OV01WSlZVbTEwVjJKclNtRldiRnB2V1Zac1YxTllaRmhYUjFKWlZtMXpkMDFXY0VaYVJrNVRWbXMxV2xadE1XOVZNREZ5VGxoa1YxSldXbEJWVnpGSFZqSk9SMkpIYUZOTk1taE1WMVpqZDA1WFNuTlViR2hzVW1zMWMxWnFSa3RYVmxweldraE9WVlpyVmpOVmJUVkRWMnN4U0dGRmVGcGhNbEpNVmpCa1MxSldTblJpUmxwT1VqTk9OVlpVUmxkVU1VMTVVMnhrYVZKdGFITlZNR2hEWVVaYVZWRnVXazlXYkVwSFZXMDFZVmxWTVhOWFZFWldUV3BCZUZZeWVHRk9iRXAxVkd4U1YwMHdTWGxXTW5CRFl6Sk5lVlJyVmxOaVYzaFVWRlZhWVdReFdrWldhemxTWWxWYVdWWkdhSE5XTWtwMFpVaEtXbUpHY0doVWJGcFBWMGRPU1ZkdFJrNVNNMmcyVm14a05GUXhUblJTYkd4aFVucFdWVlp1Y0ZkVlJsSldWMjVPV0Zac1dqQmFWVlozWVVkS1ZXSklWbFpOVjFGM1ZsUktTMU5HVm5KaFJtUnBWMFZLZVZaWGNFZFpWMDV6Vkd4b2FWSkZOV2hVVldRMFRVWmFTRTFFVmxwV2JHd3pWakZvYTFkdFNsVlNhMmhoVWxad00xWnJXazlXVm1SeVkwWktUbE5GU2t4V2JHTXhZekZGZUZOWWJGVmliRXBZV1d4b2IxTXhiRmRoUjNScFlrVTFXVlJzWkVkaFZrbDNUbFJHVjFKNlZrUlpWbFY0WTFaV2RWRnNWazVpV0doRVYxWmFhMVV5VGxkVGJHeFhZWHBXVTFSVlpEUk9iRlY0Vm1zNVZFMXNSalZXUnpWVFZVWlplbEZ0YUZkTlJsVjRWRzE0VDFkSFRrbFhiVVpPVWpObmVGZFVRbE5TTWtaWFUxaGtWMkpyU2xaVmJGVXhVVEZzVjFwR1RsUldNSEJLVjJ0a1IxWnJNVWhqTTJ4V1RWWmFVRlY2U2xOV01rcEhZa1phYVdFd2NIbFhWM2hoVmpKT1IxVnJXbFZoTUhCdlZtcENkMU5XVVhoWmVrWm9WbFJHTVZsVmFHdFhiVXBWVW1wYVdsWnNWVEZaTUZwSFYwZEtTR0ZHVWxOaE1uZDZWakZTUTJJeFVuSk9XRXBzVWtaYVVWWXdaRFJaVmxsM1drVTVUbFp0VW5oVk1qVlBWR3hKZDFkcmNGZGlWRVo2V1ZSR2ExSnJOVmxVYkhCT1lXdGFVVmRyWTNoVE1sSlhWbTVTYkZJeWVIQlphMVphWlVaWmVGVnJjRTlXTVVwSFdrUk9jMkpHVGtaVGJrcFdZV3R3ZGxsNlJuTmpiSEJGVldzNVUxZEhVWHBYVmxacllqRmtjazFZVmxaaWJWSmhXV3hvVTJOc1VsZGFSV1JZVW14YU1GcFZWWGhVYlVaeVYyNWFXRmRJUWxCV1ZFcExVMFpTZFZGc1FsaFNWWEJvVmtaa2QyTXdNVmRoTTNCb1pXeGFVRmxzV2t0WFZuQldWV3RrVlZZd2NIbFZNbkJIVjBkS2RHVkZkRnBsYTBwNlZXdGFUMlJXVW5SaFJtUnNZa1p2TVZaVVJtdGtNbEp6WWpOa2FWTkdTbTlWYTFaTFkyeFZkMVpyZEU5aVJrWTFXVmh3VTJFeVNsWk9WRUpXWWxoQ1VGWkdaRXRYUmxaMVdrZEdVMVl4U2pKV1JscGhZekpTVjFkdVZtcFNNRnBaVld4b1EyVkdaRmhqUlhCT1ZsUkdTRmt3V205VU1WcEdVMnMxV21KR1ZYaFVWM2h6WXpGU1ZWWnRjRTVoTVhCaFZteGpkMDVXYkZkWFdIQm9VMGhDYUZac1ZYZE5WbFY0VjI1T1dGSnNTakZWTWpGdlZqSldjMWRyY0ZoaE1YQnlXWHBLUm1WSFRrZFZiRUpZVW10d2FGWnFRbFpOUjFGNFdraE9hRkpZUW5KWmEyaERVMVpXZEdORlRsaGlSbGt5V1d0U1ExZHNXblJoUmtKYVZqTlJNRnBGWkVkVFJUVldZMGRvV0ZJeFNqRldWRVpxWlVaWmQwNVZaR3BTYkVwVlZtdGFkMU14VmxWUmJtUlhZa2QwTlZSc1dtdGhWa3BZWlVoa1lWSkZjSEpWTWpGTFkyeE9jVlpzYUdsU01EUXdWMVJDYTFVeFpFWk5WV2hwVW10S2IxWnNWbUZrTVZsNVRVaG9VMDFyTVRWV1JtaHpWakZaZVdWSVVsZFdSVFZ5VmtWYVQxWnRSa2xqUjJoWFlsUnJNVlpYTURGVk1XeFhWbGhrYUdWcmNGVldiRlV4VkVaV2NsZHJkRk5TYXpWYVZrZDBkMVZyTVVsUlZFcFhUVzVvZGxWNlFYaGpNazVIWWtaU1YwMXVhRkpYVmxwWFVqSk9SMVpzWkZkaGJFcFdWbXhrTkdReGNFVlRiWFJVWWxWd2VWUnJhR3RYUmxwMFlVWlNXbUV4V25wWk1XUktaVlp3Um1OSGJGTmlSemsyVm1wS01HRXhTWGROVldoVFlrZG9VRlp1Y0ZkVE1XeFhZVWQwYVdKRk5WbFVWbFUxWVZVeFdWRnNiRlppV0VKRVdWWmtTMVpzWkhGUmJHaHBVbFJXVEZaSE1UQmpNVXBIVkc1S2FWSnJOWE5XYkZaM1UxWmtWVk5ZYUZkTmEzQkhXV3RvUTJFd01YUlZhM1JhWWxob00xbDZSbkpsVlRWV1QxZHdVMDFIZHpGV1IzUnJZekZXU0ZKc1dsTmlhMHBvVldwT1ExSXhjRWRXV0doVFVtczFXbFpIZEhkVmF6RkpVVmh3V0ZaRmJETlViR1JIWXpKT1IySkdWbWxpYTBwTVYxWmpkMDVYU25OVWJHaE9WbFJzY1ZSWGRHRlhWbHAwVGxaa2FFMVZWak5aYTJoM1ZrWmFWazVWZUZWV1YxSllWakZhUjJSSFZrWmpSMmhwVmtkNE1WWlVSbXBrTURGWVVtdG9WbUV5YUhCVmExWjNZVVphVlZGdVRteGlSVFZYVmtkME1HRnJNWEppUkZaWVlUSm9hRmxXV2twbFYxWkZVbXh3V0ZJemFFeFdSekV3WXpGS1IxUnVVbEJXTTFKVlZXMTBkbVZzWkZWVWJtUnJZbFpLZVZwRVRuZFdSMHBZWVVoS1lWWnNTbGhhUmxwelZqSkdSMVJ0YkU1aVJYQmFWbFJLZDFJeVJuSk5XRTVZWVd4YVdWWnJWbkpOVm5CSFdrWk9WRkpzY0RGV2JURXdWVzFXYzFkdWFGaFdNMEpMV2tSS1UyUkdUbkpoUjJ4VFVsVndkbFpYY0VkWlYxWnpZa2hLYUZKNlZuSlphMVV4VTFaV2RFMVlaR2hTVkVZd1dsVlNSMVp0Um5KT1ZtaGFUVVp3TTFVd1dtRlhWbVIwWWtaa1RsSnRPSGxXTW5SWFlURlplVlpzV210Tk1uaHdWV3BPUTJOR1VsaGpSbVJQWWtaS1JsVXljelZoUlRGWVdrUldXbUV5VWpOWlZsVjRZMVpXY1ZKc2NFNVNNREUwVjFjeE1HTXlUa2hWV0d4aFVsaENjRll3Wkc5Tk1XUllUVWhvYkdKVldsZFVNV2hEVld4WmVXVkhPVlpOUm5CTFdrUkdjbVF5UmtaT1ZUbG9UVEpqZUZaRVJtOWpNV1J6V2tWb1ZXRnJXbGxaVjNSM1pXeFNWbHBGWkZSV2JIQXdXV3RrTUZkR1NsVldibkJZVmtWc05GWkVTbE5rUms1MVZteGFhVmRIYUhkWFZ6RTBVakF4VjFwR1ZsUldSbHB5Vld4b2EwNVdjRlpoUlU1b1RWVnNOVmxWYUU5WGJVVjVWVlJDVldFeFdYcGFSRXBIVTBkR1IyTkZOV2xpUlc5NlZqRmplRTFIUlhkTlZtaFRZa2RvVjFsc2FHOVViRkpZWTBWa2FVMVhkekpXUjNoUFlWWkpkMDVZWkZWTlYxRjNWako0YTFJeFRuUlBWbFpUVWxoQ1VWZFdVa05PUjFKSVVtdG9UMVpZUW05V01HUlRaRlpWZUZremFGZE5SRlpJV1RCYVUxWkdXa2RqUlhSV1ZrVktNMVp0ZUhKbFZUVlhXa2RzVTFZemFETlhhMUpMWVRGT2RGTnVTbFJoYkZwWldXdGtUMDVHYTNkYVJrNVlVbFJHU1ZscldrTmhSbHBXVjI1a1YwMXFRalJWYWtwT1pWWlNXV0pHWkZkTmJtZ3dWbXhhYWs1V1VrZFNXR3hyVFRKU1ZWUlhlSGRWTVZaSFZWaGtVVlZVTURrPQ==