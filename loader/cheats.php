VmpKNGIyRXlVbk5pTTJScFUwWktWbGxzVW5OaFJscHhVV3h3YTAxWGREWlphMVozVkRKRmVXVkZUbHBOUjFKTVZXdGtSMVpzVGxWVWJGSlhaV3RhZVZkV1ZtdFRNV1JIVjJ4b2FWSnJTbTlXYkZaaFpERmFjVk5VUmxkTmF6RTBXV3RhVTFaR1pFWk9WWFJXVmtWS00xUnRlR3RqTWtaR1pFVTFhVk5GU21GV1ZFWnJZekZXU0ZKc1dsTmlhMHBZV1ZSR2QxTXhiRmRXYWxKVFVtdGFXVmxyWkhkVWF6RldZMGhhV0dFeFduSldiVEZIVm1zNVdWRnNTbGROYm1oWlZtMDFkMVl5VG5OYVNFNWhVbXMxY0ZWdE1UQk9iRnBZVFZSU1dsWnJWak5aYTJoM1ZrWmFWazVWZUZwV2VrWklWVEJhWVdSSFJraGtSazVzWWtad01sWXhaRFJoTVZwMFVteGFVRmRGU2xOV2FrbzBWbFpXYzFwRk9XbGlSbkF3VkZab1QyRXdNVWhsU0dSaFVrVndjbFV5TVV0ak1rNUpWR3h3VG1Gc1dsRlhWRUpyVTIxV1ZrNVZhR2xTYTBwdlZteFdZV1F4WkhKYVNHUlRZbFpLVjFSV1ZsTldSbVJHVGxWMFZsWkZTak5hVjNoclZqSkdSazlWTlZOV00yZzBWMWR3UzJFeFRuUlNibEpyVWtWYVZsWnRlRXRUTVhCSFZsaG9hbFpyV2xwWmExVXhWV3N4U0dWRVdsWk5WbHBRVlhwS1VtVldVblZWYkVKWFRUQktiMVpxUWxaTlZUVnpWR3hvYWxOR2NHaFVWV1EwVFZacmQxVnJaR2hXYTJ3elZtMDFRMVpXU2xaT1ZVNWFWbTFTVkZVeFpFdFRWbkJJVW14YVRsSXpUalZXVkVaWFZERk5lVlZzWkdsU2JYaFhXVzEwUzJOc2JITlhiR1JxVW14S1IxWkhkRXRoUmxsM1kwVnNWVTFYVFhoWlZsVjRaRmRHU1ZwR2NHbFdSVmt5VjFaYVZrNVhUa2RTYkdocFVqSm9WVlZ0ZEhOTk1XUlZVVzA1VldGNlZubGFWVkpYVlVaa1NHVkhSbGROUjFKUVZGWmFhMk5XVG5WVWF6VlRUVVp3UzFadE1IaGpNa1Y0V2tWYVQxZEZOV0ZVVjNCSFZVWndTRTFWZEd0V2JGb3dXbFZrYzJGWFNrWlhXR2hYVFZaS1MxUnNaRk5TYlZGNllrZDRWRkpWY0hsV1YzQkxZakpOZUdKSVNtRlNSa3BRVld4b2EwMHhiRlphUnpsWVlYcEdNVlpYTld0WGJVcFpWVzVLVlZadFVraFdNRnBYWkVkV1JrMVZOV2hoTVhBeVZqRm9kMVF4VlhsVGEyaFZZbXRLVVZZd1ZrdFpWbEpZWTBoT1RsWnRkRFpaV0hCWFZESktWMU5zYkdGV1ZrcElWa1prUzJOc1RuRlNiR2hwWWxob1RGZFljRU5qTVVwSFZHNVdWV0pYYUZoYVYzaGhUbFpWZUZwSVpHdGlSemt6V1d0b1UyRkdTa1pUYmtwV1RVWmFURlJ0ZUZKbFYwWTJWVzEwYVZaV2NFcFdWekI0WkRKR1JrMVlVbXhTUlZwWldWZHpNVmRHYTNkWGJtUlVVbXh3V2xadE1YTmhWbHB6WWtST1YxSlhhSHBWTWpGT1pESktSbFZzVW1oaE1IQjNWa1pTUTFNeVVYaGFSbXhwVWxoQ1VGbFVTalJTVmxWNFdraGtWR0pWV2xwWGEyTXhWa1phTmxKcmFGcFdiVkpMV2xkNFlXTldSbkpqUjJocFZrZDRNVlpVUm10TlJrbDNUbFpvVldKdVFsZFVWRXB2WTBac2RHVkdUbE5pVlRFMFYydFNZVlV4WkVaT1ZsWldWbnBHZWxsVldscGxiVVpKVm14d1YyRjZWa1ZYVkVKdllXc3hjMk5GYkZKaVYzaHZWbXhXZGsxc1pGZFhiVGxXVFd0d1NWVXllRzloVmtwSFkwYzVWMVpGU2t0VVYzaHpWakpHU1ZSdGFGTk5SRlYzVm0weGQxRXhUbk5UV0doWVltdHdZVlp0TVU1bFJtdDNXa1prYWxKcmNGbFphMVY0VldzeFJsZHVaRmROYm1oMldXcEtTMUp0U2tsU2JXeE9ZbFpLVEZkWGRHRlRNRFZYWTBWa1lWSnNjRzlXYkdodlVsWldWMXBJVG1oaVJUVkhXVEJvVDFkdFNraFZibkJWVm0xU1RGWnJXazlXVm1SeVkwWktUbE5GU2xoV01WSktUVlpaZVZOcldtbFRSbHBQVlRCVk1WSldiRmRXYTNCT1RWVTFXVlJXWkRCaFJrbDNZMFpzVjJKSFVucFdWV1JIVm14S2RWRnNaRTVoYkZwWlYxaHdSMk14V2tkVWJHeFZZVE5DVTFSVmFFSk5iRmw1WlVjNVZFMUVSbnBaTUZwelZrWlplV1ZHUmxwV2JGcElXVEJhWVdOc1pISmpSMmhYVjBkb1JsWldXbXRqTWtaeVRVaG9WR0pVYkdoVmJHUlRWakZzVjFaVVZtcFNhMXBaV1d0YWExWXlWbk5YYm14WFRXNW9jbFpVU2t0U01rVjZZMFphYVZkSGFHOVdWbEpEWXpKV2MxUnNXbFZoTTFKdldXeFdZVk5XV25STlZ6bG9UVlZ2TWxadE1EVlhiVXBJVld4a1dsWnNWVEZaTUZwSFYwZEtSMVZzVGxkTlJGWXhWbXhqZDAxV1RYbFRhMlJxVW14S1ZWWXdWVEZUTVZaVlVXNWFiRlp0VW5wWlZWWXdZa2RLVmxkc2JGVk5WMmhZVlRJeFIyUkZPVmhPVmxKWFpXeGFhRmRzVmxkT1IwNVhVbXhvYVZKVVJsTlVWVlpoWkRGa1dHUkhkRk5OYkZvd1ZsZDBVMVpHV2tkalJYUldWa1ZLZVZSV1dsTlRSMDVHVjIxNFYxZEhhRFJXVkVadllURlNkRkp1U2xOaWEwcFdWV3hWTVZFeGJGZGFSVGxVVm1zMU1WWXllSGRVYlVwSFlucEtXRlpGTlhwVk1uTXhZMjFLUmxWc1VtaGlTRUo1Vm0xd1QySXlTWGhVYkdocFVrVTFhRlJWWkRSTlZscFlZMFprYUdKRmJEUldiVFZEVmxVeGRHVkZUbHBXYlZKTVdrVmFTMk5XUm5SaFJtaFRZbXRLTmxaVVJtdGpNREI0WWpOa2FWTkdTbk5WTUZwM1lVWlNXR05JVG14aVIzaFlWMWh3UjJGdFJYbGxTR2hhWVd0d2NsVXlNVXRYUm05NldrZEdVMVl5YUVWWGJHUjZUbGRPUms5VmJGaGlXRUp3Vm14YWMwNXNXa1paTTJob1RXczFTVlpYZEc5aFJrcEdWMjFHV21KWWFHaFViWGhyWXpKR1JtUkhhR2xXVjNjeFZrZDRVMUV4YkZkWGFscFhWMGRTVmxWdWNFZFZSbkJJVFZWMFYxSlViRnBXUnpGdlYwWktjbU5FU2xkTmJtaHlWR3RrVG1WV1duSlZiRUpYVmpOb2FGWnRjRUpOVjFaWFlrWmtXbVZyV2xWVmFrWkxWMVpzY2xwRVFscFdiRmt5V1d0U1ExZEdXblJoUmtKVlZsWndNMVl4V2s5WFZtUjBZVVprVGxKR1ZqVldNV04zVFZaU2RGVnVVbGRpYkZwWVdXMXpNV05zV2xsalJtUk9UVmQ0TUZSV1pIZGhSbHBaWVVWV1ZsWnRVbnBaVmxwS1pWZFdSVkpzY0ZoU00yaE1Wa2N4TUdNeFNrZFVibEpRVmpOU1ZWVnRkSFpsYkdSVlZHNWthMkpXU25sYVJFNXpZVVpKZVdGSFJsVldlbFpVV2tSR2MyUkZNVmhrUlRWWFRVWndXbFpzWTNoT1JsSllVMnhXVjJKck5XaFZiRlYzVFVac1YxWnFVbE5TYTFwWldXdGtNRlV5Vm5Sa00zQllWbXh3Y2xaSE1VZFdhemxaVVd4S1YwMXVhRXhYYkZwWFl6SldjMVJzV2xWaE0xSnZWVzB4TkUxR1VYaFZhMlJvVFZWV00xbFljRXRXUmxwV1RsVjRWbFo2UmxoV01WcFRVbXhhZFdOR1pHeGlSbGw2VjJ4V1YwNUdTWGxVV0hCb1VsUkdWRlpxU2xOWlZteHpXa1JTYkdKSFVuaFZNalZMV1ZVeGNsZHVSbGRTUld0NFdWVmFZVTVzVm5ST1ZuQnNZVE5DTmxaR1ZtRmtNV1JHVFZac1VtSllhSEJXYWs1VFpGWmtjMWt6YUdwTlJGWllXV3RhYzFaSFNsbGhTRXBXVmtWS1RGbDZSbXRqYkhCSlZHMTBWMDFHY0dGWFYzQkxZakZPZEZKc2JHRlNlbFpWVm01d1IxZEdVbkpYYm1SWFVtczFWbFl5ZEhkVmF6RkpVV3hrV0ZaRmEzaFdha3BMVW0xS1NWRnRkRTVpVmtwTVYxY3hNRk13TlZkYVNFNWFUVEpvY1ZWcVJrdFhWbEpXV2toT1ZsSXdXbGRWYlRWRFYwZEtWVkpyYUZwbGEzQlBXbFphWVZkSFNraE5WbHBZVWxWd2VWWldVa3BOUjFGNFVXeEtVVlpFUVRrPQ==